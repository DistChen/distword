{
  "name": "Distword",
  "tagline": "在线浏览、编辑office文档",
  "body": " 在线浏览 office 文档一直是个刚需，除了利用Office Web Apps 之外，我也探索了另外一种实现：将 office 文档转成 html，然后嵌入到可编辑的 iframe 中，同时解决浏览和编辑的问题，不过编辑特殊的东西肯定是不行的，比如图表之类的。\r\n\r\n将 office 转成 html 用到了 jacob，在 Maven 中央仓库中的地址如下：\r\n> [http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22net.sf.jacob-project%22](http://note.youdao.com/)\r\n\r\n### 先上demo图，选择文档:\r\n![这里写图片描述](http://img.blog.csdn.net/20160826193807016)\r\n\r\n### 点击上传，程序会自动将word转换成 html，并加载到 iframe 中，如下：\r\n![这里写图片描述](http://img.blog.csdn.net/20160826193819220)\r\n\r\n### 在转换的过程中，会把图表转换成图片，由于iframe是可编辑的，我们可以对其进行修改并保存，保存后会直接下载下来，如下所示：\r\n![这里写图片描述](http://img.blog.csdn.net/20160826193918354)\r\n\r\n### 打开保存下来的文档，可以看到内容已经加进来了，而且之前变成图片的图表也重新还原成了图表类型，仍可以继续编辑：\r\n![这里写图片描述](http://img.blog.csdn.net/20160826193948870)\r\n\r\n由于我们可以把 iframe 制作成一个富文本编辑器，所以可以提供更多的编辑功能，如格式化等，或者直接借助已有的富文本编辑器来进行改造。我之前也写过一个简易的富文本编辑器来满足项目的要求，这里就不说 js 制作富文本编辑器的过程和细节了。\r\n\r\n这里把一些相应的代码贴上来:\r\n### java：word 转为 html：\r\n\r\n```\r\npublic static boolean WordToHtml(String sourceFile,String targetFile){\r\n    boolean result=false;\r\n    ComThread.InitSTA();\r\n    ActiveXComponent app = new ActiveXComponent(\"Word.Application\");\r\n    try\r\n    {\r\n        app.setProperty(\"Visible\", new Variant(false));\r\n        Dispatch docs = app.getProperty(\"Documents\").toDispatch();\r\n        Dispatch doc = Dispatch.invoke(docs, \"Open\", Dispatch.Method,new Object[] { sourceFile, new Variant(false), new Variant(true) }, new int[1]).toDispatch();\r\n        Dispatch.invoke(doc, \"SaveAs\", Dispatch.Method, new Object[] {targetFile, new Variant(Const.WORD_TO_HTML) }, new int[1]);\r\n        Dispatch.call(doc, \"Close\", new Variant(false));\r\n        result=true;\r\n    }\r\n    catch (Exception e)\r\n    {\r\n        e.printStackTrace();\r\n        result=false;\r\n    }\r\n    finally\r\n    {\r\n        app.invoke(\"Quit\", new Variant[]{});\r\n        ComThread.Release();\r\n        ComThread.quitMainSTA();\r\n    }\r\n    return result;\r\n}\r\n```\r\n### java：html 转回 word:\r\n\r\n```\r\npublic static boolean HTMLToWord(String sourceFile,String targetFile) {\r\n    boolean result=false;\r\n    ComThread.InitSTA();\r\n    ActiveXComponent app = new ActiveXComponent(\"Word.Application\");\r\n    try {\r\n        app.setProperty(\"Visible\", new Variant(false));\r\n        Dispatch htmls = app.getProperty(\"Documents\").toDispatch();\r\n        Dispatch html = Dispatch.invoke(htmls, \"Open\", Dispatch.Method, new Object[] { sourceFile, new Variant(false), new Variant(true) }, new int[1]).toDispatch();\r\n        Dispatch.invoke(html, \"SaveAs\", Dispatch.Method, new Object[] { targetFile, new Variant(Const.HTML_TO_WORD) }, new int[1]);\r\n        Variant f = new Variant(false);\r\n        Dispatch.call(html, \"Close\", f);\r\n        result=true;\r\n    } catch (Exception e) {\r\n        e.printStackTrace();\r\n        result=false;\r\n    } finally {\r\n        app.invoke(\"Quit\", new Variant[] {});\r\n        ComThread.Release();\r\n        ComThread.quitMainSTA();\r\n    }\r\n    return result;\r\n}\r\n```\r\n同样的道理，还可以实现excel、ppt 与 html 的互转。\r\n### javascript：上传后加载文档\r\n```\r\nfunction display(fileName){\r\n    var iframe=document.getElementById(\"WordContainer\");\r\n    iframe.src=\"word/HtmlWord/\"+fileName;\r\n    iframe.onload = iframe.onreadystatechange = function() {\r\n        if (this.readyState && this.readyState != 'complete') {\r\n            return;\r\n        }\r\n        else {\r\n            var iframeDocument = this.contentDocument || this.contentWindow.document;\r\n            iframeDocument.body.contentEditable=true;\r\n        }\r\n    }\r\n    $(\"#htmlid\").val(fileName);\r\n}\r\n```\r\n### javascript：编辑文档并保存\r\n```\r\nfunction saveWord(){\r\n    var iframe=document.getElementById(\"WordContainer\");\r\n    var iframeDocument = iframe.contentDocument || iframe.contentWindow.document;\r\n    console.log(iframeDocument.body.innerHTML);\r\n    var htmlid=$(\"#htmlid\")[0].value;\r\n    var htmlcontent=iframeDocument.body.innerHTML;\r\n    $.post(\"save\",\r\n            {\r\n                htmlid:htmlid,\r\n                htmlcontent:htmlcontent\r\n            },\r\n            function(data,status){\r\n                console.log(data);\r\n            }\r\n    );\r\n}\r\n```\r\n\r\n我的目的是想开发一款类似“百度 Doc” [http://word.baidu.com/](http://word.baidu.com/) 的东西，这样可以丰富、稳固自己的知识，目前正在抽时间筹备中(苦命的打工仔，天天加班)，欢迎各位拍砖、指导，谢谢。\r\n\r\n![这里写图片描述](http://img.blog.csdn.net/20160826194616404)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}